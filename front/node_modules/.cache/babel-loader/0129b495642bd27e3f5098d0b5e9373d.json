{"ast":null,"code":"var _jsxFileName = \"/home/gbb/UdgProject/front/src/components/LogPage/LogPage.js\";\nimport React, { Component } from 'react';\nimport { XYPlot, VerticalBarSeries, XAxis, YAxis } from \"react-vis\";\nimport { Table } from \"react-bootstrap\";\nimport Detail from \"./Detail\";\nconst data = [// 이건 그래프 데이터. 이런식으로 {x: , y: } 로 채워진 array 형식이어야 그래프로 나와.\n{\n  x: 0,\n  y: 8\n}, {\n  x: 1,\n  y: 5\n}, {\n  x: 2,\n  y: 4\n}, {\n  x: 3,\n  y: 9\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 5,\n  y: 7\n}, {\n  x: 6,\n  y: 6\n}, {\n  x: 7,\n  y: 3\n}, {\n  x: 8,\n  y: 2\n}, {\n  x: 9,\n  y: 0\n}];\nconst details = [// 이게 표 내용 배\n// /만약 \"Column(열)\"이 하나 더 생겨야할 경우, 말해줘.\n// 우선적으로 이렇게 id, ip, port, protocol, time으로 해뒀는데 예를 들어 ip가 src_ip / destination_ip 로 나눠서 하나가 더 생길 경우\n// 밑에 thead 하위 th 를 하나 더 추가해야하고,\n// Details 컴포넌트에 넘겨주는 props도 추가되어야해.\n// Detail 컴포넌트 내부에서도 열을 하나 더 추가해야하\n{\n  id: 0,\n  ip: \"192.168.188.129\",\n  port: \"22\",\n  protocol: \"IPv4\",\n  time: \"2019-11-19 01:39:30\"\n}, {\n  id: 1,\n  ip: \"192.168.188.88\",\n  port: \"22\",\n  protocol: \"IPv4\",\n  time: \"2019-11-19 01:39:30\"\n}];\n\nclass LogPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // chartData: this.props.chartData,\n      // details: this.props.tableDetail,\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('http://127.0.0.1:8000/api/');\n      const posts = await res.json();\n      this.setState({\n        posts\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"LogPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Log Page\"), React.createElement(\"h5\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\uC138\\uBD80\\uC0AC\\uD56D\"), React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"IP\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Port\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Protocol\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Time\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, details.map(d => {\n      return React.createElement(Detail, {\n        id: d.id,\n        ip: d.ip,\n        port: d.port,\n        protocol: d.protocol,\n        time: d.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }); // 테이블 열 추가될 경우, 여기에 props 추가 필요. 행은 자동 추가.\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.posts.map(item => React.createElement(\"div\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" \", item.date), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, item.cmd)))));\n  }\n\n}\n\nexport default LogPage;","map":{"version":3,"sources":["/home/gbb/UdgProject/front/src/components/LogPage/LogPage.js"],"names":["React","Component","XYPlot","VerticalBarSeries","XAxis","YAxis","Table","Detail","data","x","y","details","id","ip","port","protocol","time","LogPage","constructor","props","state","posts","componentDidMount","res","fetch","json","setState","e","console","log","render","map","d","item","date","cmd"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {XYPlot, VerticalBarSeries, XAxis, YAxis} from \"react-vis\";\nimport {Table} from \"react-bootstrap\";\nimport Detail from \"./Detail\";\n\nconst data = [ // 이건 그래프 데이터. 이런식으로 {x: , y: } 로 채워진 array 형식이어야 그래프로 나와.\n    {x: 0, y: 8},\n    {x: 1, y: 5},\n    {x: 2, y: 4},\n    {x: 3, y: 9},\n    {x: 4, y: 1},\n    {x: 5, y: 7},\n    {x: 6, y: 6},\n    {x: 7, y: 3},\n    {x: 8, y: 2},\n    {x: 9, y: 0}\n];\n\nconst details = [\n    // 이게 표 내용 배\n    // /만약 \"Column(열)\"이 하나 더 생겨야할 경우, 말해줘.\n    // 우선적으로 이렇게 id, ip, port, protocol, time으로 해뒀는데 예를 들어 ip가 src_ip / destination_ip 로 나눠서 하나가 더 생길 경우\n    // 밑에 thead 하위 th 를 하나 더 추가해야하고,\n    // Details 컴포넌트에 넘겨주는 props도 추가되어야해.\n    // Detail 컴포넌트 내부에서도 열을 하나 더 추가해야하\n    {\n        id: 0,\n        ip: \"192.168.188.129\",\n        port: \"22\",\n        protocol: \"IPv4\",\n        time: \"2019-11-19 01:39:30\",\n    },\n    {\n        id: 1,\n        ip: \"192.168.188.88\",\n        port: \"22\",\n        protocol: \"IPv4\",\n        time: \"2019-11-19 01:39:30\",\n    },\n];\n\nclass LogPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // chartData: this.props.chartData,\n            // details: this.props.tableDetail,\n            posts : []\n        };\n    };\n\n    async componentDidMount(){\n      try {\n        const res = await fetch('http://127.0.0.1:8000/api/')\n        const posts = await res.json();\n        this.setState({\n          posts\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    render() {\n        return (\n            <div className=\"LogPage\">\n                <h3 className=\"text-left\">Log Page</h3>\n                <h5 className=\"text-center\">세부사항</h5>\n                <Table bordered hover>\n                    <thead>\n                    <th>#</th>\n                    <th>IP</th>\n                    <th>Port</th>\n                    <th>Protocol</th>\n                    <th>Time</th>\n                    </thead>\n                    <tbody>\n                    {details.map(d => {\n                        return <Detail id={d.id} ip={d.ip} port={d.port} protocol={d.protocol} time={d.time}/> // 테이블 열 추가될 경우, 여기에 props 추가 필요. 행은 자동 추가.\n                    })}\n                    </tbody>\n                </Table>\n                <div>\n                  {this.state.posts.map(item => (\n                    <div key={item.id}>\n                      <h1> {item.date}</h1>\n                      <span>{item.cmd}</span>\n                    </div>\n                  ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LogPage;\n"]},"metadata":{},"sourceType":"module"}